#!/usr/bin/env bash

__bpp_set_theme() {
    BASH_POWERPROMPT_THEME="random"

    local random_theme="random"
    local random_file=""
    local script_dir="$(__get_script_dir)"

    if [ -n "$BASH_POWERPROMPT_RANDOM_THEMES" ]; then
        # User defined a set of themes to pick from
        local random_themes=($BASH_POWERPROMPT_RANDOM_THEMES)

        if [ ${#random_themes[@]} -eq 1 ]; then
            if [ ${random_themes[0]} = "random" ]; then
                printf "Error: BASH_POWERPROMPT_RANDOM_THEMES cannot only contain 'random', selecting default theme\n"
                random_file="$script_dir/themes/default.theme"
            else
                # Just select the single theme
                random_file="$random_themes[0]"
            fi
        else
            # Loop until we pick any theme but the 'random' theme itself
            while [ "$random_theme" = "random" ]; do
                random_theme="${random_themes[RANDOM % ${#random_themes[@]}]}"
            done

            random_file="$script_dir/themes/$random_theme.theme"

            # Strip the path and extension from the file
            random_theme="${random_file##*/}"
            random_theme="${random_theme%.theme}"
        fi
    else
        local files=($script_dir/themes/*.theme)

        # Loop until we pick any theme but the 'random' theme itself
        while [ "$random_theme" = "random" ]; do
            # Pick a random file from the themes directory and set it as the current theme
            random_file="${files[RANDOM % ${#files[@]}]}"

            # Strip the path and extension from the file
            random_theme="${random_file##*/}"
            random_theme="${random_theme%.theme}"
        done
    fi

    if [ -f "$random_file" ]; then
        printf "Selected random theme '%s'\n" "$random_theme"
    else
        printf "Error: Theme '%s' does not exist, selecting default theme\n" "$random_theme"
        random_file="$script_dir/themes/default.theme"
    fi

    source "$random_file"
    __bpp_set_theme
}
