# Requirements:
#     - 256 color support
#     - Powerline font installed
#     - Unicode support

__set_theme() {
    BASH_POWERPROMPT_THEME='colorful'
    BASH_POWERPROMPT_FG_COLORS=(15 15 15 15 15 15 15 15)
    BASH_POWERPROMPT_BG_COLORS=(6 25 25 25 90 72 72 160)
    BASH_POWERPROMPT_LEFT_PADDING=(' ' ' ' '' '' ' ' ' ' '' ' ')
    BASH_POWERPROMPT_RIGHT_PADDING=(' ' '' '' ' ' ' ' ' ' ' ' ' ')

    # NOTE: There is an additional symbol at the end for the end of the prompt
    BASH_POWERPROMPT_SEPARATORS=(
        $BASH_POWERPROMPT_SOLID_ARROW_SYMBOL
        ""
        ""
        $BASH_POWERPROMPT_SOLID_ARROW_SYMBOL
        $BASH_POWERPROMPT_SOLID_ARROW_SYMBOL
        $BASH_POWERPROMPT_SOLID_ARROW_SYMBOL
        $BASH_POWERPROMPT_SOLID_ARROW_SYMBOL
        $BASH_POWERPROMPT_SOLID_ARROW_SYMBOL)

    local git_branch="$(__get_current_git_branch)"

    if [ -n "$git_branch" ]; then
        git_branch=" $git_branch"
        local git_state="✗"
        local git_state_color="$BASH_POWERPROMPT_GIT_FG_DIRTY_COLOR"

        if [ -n "$(__is_git_branch_clean)" ]; then
            git_state="✓"
            BASH_POWERPROMPT_FG_COLORS[4]="$BASH_POWERPROMPT_GIT_CLEAN_SYMBOL"
            git_state_color="$BASH_POWERPROMPT_GIT_FG_CLEAN_COLOR"
        fi

        BASH_POWERPROMPT_FG_COLORS[6]="$git_state_color"
        BASH_POWERPROMPT_SEPARATORS[5]=""
    fi

    # The extra backslashes in '\\\u' are necessary so printf does not interpret it as a unicode escape sequence
    BASH_POWERPROMPT_SECTIONS=("$BASH_POWERPROMPT_EXIT_STATUS" "\\\u" "@" "\h" "\w" "$BASH_POWERPROMPT_GIT_BRANCH_SYMBOL$git_branch" "$git_state" "$BASH_POWERPROMPT_COMMAND_SYMBOL")
}
