#!/usr/bin/env bash

# Requirements:
#     - True-color support
#     - Powerline font installed
#     - Unicode support

__bpp_set_theme() {
    __load_utility "utils"

    BASH_POWERPROMPT_THEME='highlights'
    BASH_POWERPROMPT_COMMAND_SYMBOL=""
    BASH_POWERPROMPT_COLOR_FORMAT=$BASH_POWERPROMPT_COLOR_FORMAT_TRUECOLOR
    BASH_POWERPROMPT_LEFT_PADDING=(' ' ' ' '' ' ')
    BASH_POWERPROMPT_RIGHT_PADDING=(' ' ' ' ' ' ' ')
    BASH_POWERPROMPT_SEPARATOR_FG_COLORS=()
    BASH_POWERPROMPT_SEPARATOR_BG_COLORS=()
    BASH_POWERPROMPT_SEPARATORS=(
        $BASH_POWERPROMPT_SOLID_ARROW_SYMBOL
        ''
        $BASH_POWERPROMPT_SOLID_ARROW_SYMBOL
    )

    local white="255;255;255"
    local blue_highlight="19;145;218"
    local pink_highlight="239;45;159"
    local fg_color="200;200;200"
    local bg_color="69;69;69"
    local gray1="85;85;85"
    local gray2="150;150;150"
    local gray3="180;180;180"

    BASH_POWERPROMPT_FG_COLORS=($fg_color $fg_color $white)
    BASH_POWERPROMPT_BG_COLORS=($gray1 $blue_highlight $pink_highlight)

    # TODO: Either do this or simply set each path element as a unique section
    # if we can combine arrays in bash
    IFS='/' read -ra path_array <<< "$(__get_cwd)"

    if [ "${path_array[0]}" = "~" ]; then
        # Slice off the tilde
        path_array=("${path_array[@]:1}")
    fi

    local sep_format="${BASH_POWERPROMPT_COLOR_FORMAT_TRUECOLOR}$BASH_POWERPROMPT_THIN_ARROW_SYMBOL${BASH_POWERPROMPT_COLOR_FORMAT_TRUECOLOR} "
    local sep=$(printf "$sep_format" $gray2 $bg_color $gray3 $bg_color)
    local last_index=$((${#path_array[@]} - 1))
    local base_format="%s${BASH_POWERPROMPT_COLOR_FORMAT_TRUECOLOR}%s"
    local arrow_format="%s${BASH_POWERPROMPT_COLOR_FORMAT_TRUECOLOR}${BASH_POWERPROMPT_SOLID_ARROW_SYMBOL}%s"
    local max_splits="${BPP_THEME_HIGHLIGHTS_MAX_SPLITS:=4}"
    local max_split_index=$((max_splits - 1))
    local new_path=$(printf "${BASH_POWERPROMPT_COLOR_FORMAT_TRUECOLOR}" $fg_color $blue_highlight)

    # The first part of the path sections is blue
    new_path=$(printf $base_format "" $white $blue_highlight "${path_array[0]}")

    for i in ${!path_array[@]}; do
        # Skip first part of path and empty splits
        if [ $i -eq 0 ] || [ $i -eq $last_index ] || [ -z "${path_array[i]}" ]; then
            continue
        fi

        if [ "$i" -eq $max_split_index ]; then
            new_path="$new_path... $sep"
        elif [ "$i" -eq 1 ]; then
            # Handle color transition between blue part of path and grey parts
            new_path=$(printf $arrow_format "$new_path " $blue_highlight $bg_color " ")
            new_path=$(printf $base_format  "$new_path" $fg_color $bg_color "${path_array[i]} $sep")
        elif [ "$i" -lt "$last_index" ]; then
            new_path="$new_path${path_array[i]} $sep"
        fi
    done

    # Output the last part of the path
    if [ "$i" -eq 1 ]; then
        new_path=$(printf $arrow_format "$new_path " $blue_highlight $bg_color " ")
        new_path=$(printf $base_format  "$new_path" $white $bg_color "${path_array[1]} ")
        new_path=$(printf $arrow_format "$new_path" $bg_color $pink_highlight "")
    else
        new_path=$(printf $base_format "$new_path" $white $bg_color "${path_array[i]} ")
        new_path=$(printf $arrow_format "$new_path" $bg_color $pink_highlight "")
    fi

    local lightning_symbol="\xe2\x9a\xa1"

    # Use two spaces between lightning symbol and job count
    local jobs=$(printf "$lightning_symbol  \j")

    BASH_POWERPROMPT_SECTIONS=(
        "\u"
        "$new_path"
        "$jobs"
    )
}
